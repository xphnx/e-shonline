generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum OrderStatus {
    SUCCEEDED
    PENDING
    CANCELED
}

enum UserRole {
    USER
    ADMINISTRATOR
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    login    String   @unique
    email    String   @unique
    password String
    verified DateTime

    Cart             Cart?
    verificationCode VerificationCode?
    role             UserRole          @default(USER)

    provider   String?
    providerId String?

    createdAt      DateTime @default(now())
    lastModifiedAt DateTime @updatedAt
}

model Category {
    id Int @id @default(autoincrement())

    name     String
    products Product[]

    createdAt      DateTime @default(now())
    lastModifiedAt DateTime @updatedAt
}

model Product {
    id Int @id @default(autoincrement())

    name     String
    imageUrl String

    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    variants  ProductVariant[]
    cartItems CartItem[]

    createdAt      DateTime @default(now())
    lastModifiedAt DateTime @updatedAt
}

model ProductVariant {
    id Int @id @default(autoincrement())

    price Int
    size  String?
    color String?

    product   Product @relation(fields: [productId], references: [id])
    productId Int

    createdAt      DateTime @default(now())
    lastModifiedAt DateTime @updatedAt
}

model Cart {
    id Int @id @default(autoincrement())

    totalAmount Int @default(0)

    user   User? @relation(fields: [userId], references: [id])
    userId Int?  @unique

    cartItems CartItem[]
    Order     Order[]

    token String

    createdAt      DateTime @default(now())
    lastModifiedAt DateTime @updatedAt
}

model CartItem {
    id Int @id @default(autoincrement())

    quantity Int

    cart   Cart @relation(fields: [cartId], references: [id])
    cartId Int

    product   Product @relation(fields: [productId], references: [id])
    productId Int

    createdAt      DateTime @default(now())
    lastModifiedAt DateTime @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    cart   Cart @relation(fields: [cartId], references: [id])
    cartId Int

    status    OrderStatus
    paymentId String?

    fullName String
    email    String
    phone    String
    address  String
    comment  String

    createdAt      DateTime @default(now())
    lastModifiedAt DateTime @updatedAt
}

model VerificationCode {
    id Int @id @default(autoincrement())

    code String

    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    createdAt DateTime @default(now())
}
